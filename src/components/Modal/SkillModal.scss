@import '../../styles/utils/colors';
@import '../../styles/utils/media-queries';

$logoSize: 80px;
$backgroundColor: get-theme-color('foreground');
$color: contrast-color($backgroundColor);
$metaDataHeight: 35px;
$paddingX: 40px;
$paddingY: 10px;

:local(.SkillModal) {

    display: flex;
    flex-direction: column;
    align-items: center;
    padding: $paddingY $paddingX $metaDataHeight $paddingX;
    min-width: 300px;

    .logoContainer {
        display: flex;
    }

    .logo {
        height: $logoSize;
        width: $logoSize;
        min-height: $logoSize;
        min-width: $logoSize;
    }

    .name {
        margin-top: 5px;
        font-family: 'opensans-semibold', sans-serif;
        font-size: 30px;
        color: $color;
    }

    .description {
        color: contrast-color-by-keys($backgroundColor, 'secondary');
        width: 100%;
    }

    .metadata {
        height: $metaDataHeight;
        width: 100%;
        position: absolute;
        bottom: 0;
        border-top: 2px solid;
        padding: 10px;
        color: contrast-color-by-keys($backgroundColor, 'secondary');
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .content-container {
        display: flex;
    }

    .metadata-item {
        display: flex;
        flex: 1;
        justify-content: center;
        align-items: center;
        font-weight: bold;
        color: $color;
    }



    .skill-level-text {
        font-weight: bold;
        justify-content: flex-end;
    }

    .bullet {
        color: contrast-color-by-keys($backgroundColor, 'secondary');
        margin: 0 10px;
    }

    .years-of-experience {
        justify-content: flex-start;

        &,
        span {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }

    .skill-level-text,
    .years-of-experience {
        min-width: 130px;
    }

    @include media('<=phone') {
        min-width: unset;

        .skill-level-text,
        .years-of-experience {
            min-width: unset;
        }

        .bullet {
            margin: 0;
        }
    }
}

// Skill level colors
:local(.SkillModal) {
    @mixin setSkillLevelColor($color) {
        .metadata {
            border-color: $color;
            background-color: rgba($color, 0.1);
        }

        .skill-level-text {
            color: $color;
        }
    }

    &.skill-level {
        &-novice {
            @include setSkillLevelColor($skill-level-color-novice);
        }

        &-proficient {
            @include setSkillLevelColor($skill-level-color-proficient);
        }

        &-expert {
            @include setSkillLevelColor($skill-level-color-expert);
        }
    }
}